name: e2e tests

on:
  schedule:
    - cron: '0 8 * * *' # Run at 8:00 daily
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request: # Don't run e2e tests on PRs that don't modify source code
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/**'
      - 'dev_requirements.txt'
      - 'pyproject.toml'

jobs:
  test:
    runs-on: tools-gha-runners
    strategy:
      matrix:
        python-version: [ "3.9", "3.13" ]
        env_target: [ "AZURE", "GCP" ]  #, "AWS" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.txt

      - name: Run tests
        timeout-minutes: 45
        env:
          NEPTUNE_E2E_API_TOKEN: ${{ secrets[format('E2E_API_TOKEN_{0}', matrix.env_target)] }}
          NEPTUNE_E2E_PROJECT: ${{ secrets[format('E2E_PROJECT_{0}', matrix.env_target)] }}
          NEPTUNE_ALLOW_SELF_SIGNED_CERTIFICATE: ${{ matrix.env_target == 'GCP' }}
        run: pytest --junitxml="test-results/test-e2e-${{ matrix.python-version }}.xml" --tap-stream tests/e2e

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-artifacts-${{ matrix.env_target }}-${{ matrix.python-version }}-${{ github.run_id }}
          path: "./test-results/"

      - name: Report
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: "./test-results/test-e2e*.xml"
          update_check: true
          include_passed: true
          job_name: "e2e tests"

      - name: Notify Slack on failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const webhookUrl = process.env.SLACK_WEBHOOK_URL;
            const payload = {
              username: "GitHub Actions",
              text: `E2E tests failed in the repository: <https://github.com/${context.repo.owner}/${context.repo.repo}|${context.repo.owner}/${context.repo.repo}>. Please check the details.`
            };
            await fetch(webhookUrl, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(payload)
            });
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
